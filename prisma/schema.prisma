generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}



model User {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  imageUrl       String?
  firstName      String?
  lastName       String?
  emailAddress   String          @unique
  credits        Int             @default(150)
  userToProjects UserToProject[]
  questionsAsked Question[]
  stripeTransactions StripeTransaction[]
}

model Project {
  id                   String                 @id @default(cuid())
  name                 String
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  gitHubUrl            String
  gitHubToken          String?
  userToProjects       UserToProject[]
  commits              Commit[]
  sourceCodeEmbeddings SourceCodeEmbedding[]
  savedQuestions       Question[]
  meetings             Meeting[] // Added relation field
  deletedAt   DateTime? 
}

model UserToProject {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)


  @@unique([userId, projectId])
}

model SourceCodeEmbedding {
  id                String   @id @default(cuid())
  summaryEmbedding  Unsupported("vector(768)")? 

  projectId         String
  sourceCode        String
  fileName          String
  project           Project  @relation(fields: [projectId], references: [id],onDelete: Cascade)
  summary           String
}

model Question {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  question    String
  answer      String
  filesReferences Json?
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id],onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Commit {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  projectId          String
  commitMessage      String
  commitHash         String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime
  summary            String
  project            Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Meeting {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  meetingUrl   String

  projectId    String
  project      Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  status       MeetingStatus @default(PROCESSING)
  issues       Issue[] // Added relation field
}

model StripeTransaction{
 
 id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userId      String
  user       User     @relation(fields: [userId], references: [id])
  credits     Int
}


enum MeetingStatus {
  PROCESSING
  COMPLETED
}

model Issue {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  start       String 
  end         String
  gist        String
  headline    String
  summary     String
  meetingId   String
  meeting     Meeting  @relation(fields: [meetingId], references: [id])
}
